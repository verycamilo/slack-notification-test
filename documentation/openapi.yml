swagger: '2.0'
info:
  description: Redwolf Proxy Gateway
  version: '1.3.0'
  title: redwolf-proxy-gateway
host: "dev.redwolf.external.plat.vizio.com"
schemes:
  - https
paths:
  /challenge:
    get:
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              type: string
      x-amazon-apigateway-integration:
        httpMethod: POST
        uri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:258062559651:function:redwolf-proxy-gateway-challenge-ts:21/invocations
        passthroughBehavior: when_no_match
        timeoutInMillis: 29000
        contentHandling: CONVERT_TO_TEXT
        type: aws_proxy
    options:
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: 200 response
          schema:
            $ref: '#/definitions/Empty'
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Access-Control-Allow-Headers:
              type: string
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Credentials: '''true'''
              method.response.header.Access-Control-Allow-Methods: '''OPTIONS,GET'''
              method.response.header.Access-Control-Allow-Headers: '''Content-Type,Content-Language,Accept,Accept-Language,Authorization,User-Agent'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
            responseTemplates:
              application/json: |
                #set($origin = $input.params("Origin"))
                #if($origin == "")
                    #set($origin = $input.params("origin"))
                #end

                #set($allowed_origins = ["*"])

                #foreach($allowed_origin in $allowed_origins)
                    #if($origin.matches($allowed_origin))
                        #set($context.responseOverride.header.Access-Control-Allow-Origin = $origin)
                        #break
                    #end
                #end
        requestTemplates:
          application/json: |
            { 
              "statusCode": 200 
            }
        passthroughBehavior: when_no_match
        timeoutInMillis: 29000
        type: mock
  /consent-management:
    options:
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        '200':
          description: 200 response
          schema:
            $ref: '#/definitions/Empty'
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'''
              method.response.header.Access-Control-Allow-Headers: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestTemplates:
          application/json: '{ "statusCode": 200 }'
        passthroughBehavior: when_no_match
        timeoutInMillis: 29000
        contentHandling: CONVERT_TO_TEXT
        type: mock
    x-amazon-apigateway-any-method:
      consumes:
        - application/json
      parameters:
        - name: sentry-trace
          in: header
          required: false
          type: string
        - name: sdk-version
          in: header
          required: false
          type: string
        - name: Content-Language
          in: header
          required: false
          type: string
        - name: Content-Type
          in: header
          required: false
          type: string
        - name: Accept-Language
          in: header
          required: false
          type: string
        - name: proxy
          in: path
          required: false
          type: string
        - name: Accept
          in: header
          required: false
          type: string
        - name: platform
          in: header
          required: false
          type: string
        - name: api-key
          in: header
          required: false
          type: string
        - name: User-Agent
          in: header
          required: false
          type: string
        - name: Authorization
          in: header
          required: false
          type: string
        - name: api-version
          in: header
          required: false
          type: string
        - name: Consent-Format
          in: header
          required: false
          type: string
        - name: X-Forwarded-For
          in: header
          required: false
          type: string
        - name: Origin
          in: header
          required: false
          type: string
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '202':
          description: 202 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '400':
          description: 400 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '401':
          description: 401 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '403':
          description: 403 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '404':
          description: 404 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '500':
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
      security:
        - redwolf-proxy-gateway-authorizer-user: []
      x-amazon-apigateway-integration:
        httpMethod: ANY
        uri: https://prod.consent.cs.vizio.com
        responses:
          '200':
            statusCode: '200'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '202':
            statusCode: '202'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '400':
            statusCode: '400'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '401':
            statusCode: '401'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '403':
            statusCode: '403'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '404':
            statusCode: '404'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          5\d{2}:
            statusCode: '500'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
        requestParameters:
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.Accept: method.request.header.Accept
          integration.request.header.Accept-Language: method.request.header.Accept-Language
          integration.request.header.User-Agent: method.request.header.User-Agent
          integration.request.header.sdk-version: method.request.header.sdk-version
          integration.request.header.Content-Language: method.request.header.Content-Language
          integration.request.header.sentry-trace: method.request.header.sentry-trace
          integration.request.header.platform: method.request.header.platform
          integration.request.header.Authorization: method.request.header.Authorization
          integration.request.header.Consent-Format: method.request.header.Consent-Format
          integration.request.header.api-key: method.request.header.api-key
          integration.request.header.api-version: method.request.header.api-version
          integration.request.header.X-Forwarded-For: method.request.header.X-Forwarded-For
          integration.request.header.Content-Type: method.request.header.Content-Type
        requestTemplates:
          application/json: |
            ## Set request body for the downstream request
            $input.json("$")

            ## Set various authorization headers based on what is present in the authorizer context
            #if($context.authorizer.jwt != "")
                #set($context.requestOverride.header.Authorization = $context.authorizer.jwt)
            #end

            ## Set authorization keys for services behind user authorizer
            #if ($context.resourcePath.contains("/pay-data-analytics-pipeline") && $context.authorizer.analyticsPipelineApiKey != "")
                #set($context.requestOverride.header.x-api-key = $context.authorizer.analyticsPipelineApiKey)
            #end
            #if ($context.resourcePath.contains("/consent-management") && $context.authorizer.consentManagementSvcApiKey != "")
                #set($context.requestOverride.header.api-key = $context.authorizer.consentManagementSvcApiKey)
            #end

            ## Set authorization keys for services behind partner authorizer
            #if ($context.resourcePath.contains("/myvizio-api") && $context.authorizer.subscriptionServiceApiKey != "")
                #set($context.requestOverride.header.Ocp-Apim-Subscription-Key = $context.authorizer.subscriptionServiceApiKey)
            #end
            #if ($context.resourcePath.contains("/subscriptions-api") && $context.authorizer.subscriptionServiceApiKey != "")
                #set($context.requestOverride.header.Ocp-Apim-Subscription-Key = $context.authorizer.subscriptionServiceApiKey)
            #end
            #if ($context.resourcePath.contains("/partner-svc") && $context.authorizer.partnerServiceApiKey != "")
                #set($context.requestOverride.header.x-api-key = $context.authorizer.partnerServiceApiKey)
            #end
            #if ($context.resourcePath.contains("/coupons-api") && $context.authorizer.partnerCname != "" && $context.authorizer.subscriptionServiceApiKey != "")
                #set($context.requestOverride.querystring.appId = $context.authorizer.partnerCname)
                #set($context.requestOverride.header.Ocp-Apim-Subscription-Key = $context.authorizer.subscriptionServiceApiKey)
            #end

            ## Set Partner headers
            #if ($context.authorizer.partnerName != "")
                #set($context.requestOverride.header.partner-name = $context.authorizer.partnerName)
            #end
            #if ($context.authorizer.partnerCname != "")
                #set($context.requestOverride.header.partner-cname = $context.authorizer.partnerCname)
            #end
            #if ($context.authorizer.partnerId != "")
                #set($context.requestOverride.header.partner-id = $context.authorizer.partnerId)
            #end

            ## Loop through all incoming query parameters and set them for the downstream request
            #set($querystrings = $input.params().get("querystring"))
            #foreach($querystring in $querystrings.keySet())
                #set($context.requestOverride.querystring[$querystring]= $querystrings.get($querystring))
                #if($foreach.hasNext)#end
            #end
        passthroughBehavior: when_no_templates
        timeoutInMillis: 29000
        type: http
  /consent-management/{proxy}:
    options:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: proxy
          in: path
          required: true
          type: string
      responses:
        '200':
          description: 200 response
          schema:
            $ref: '#/definitions/Empty'
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'''
              method.response.header.Access-Control-Allow-Headers: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestTemplates:
          application/json: '{ "statusCode": 200 }'
        passthroughBehavior: when_no_match
        timeoutInMillis: 29000
        contentHandling: CONVERT_TO_TEXT
        type: mock
    x-amazon-apigateway-any-method:
      consumes:
        - application/json
      parameters:
        - name: sentry-trace
          in: header
          required: false
          type: string
        - name: sdk-version
          in: header
          required: false
          type: string
        - name: Content-Language
          in: header
          required: false
          type: string
        - name: Content-Type
          in: header
          required: false
          type: string
        - name: Accept-Language
          in: header
          required: false
          type: string
        - name: proxy
          in: path
          required: true
          type: string
        - name: Accept
          in: header
          required: false
          type: string
        - name: platform
          in: header
          required: false
          type: string
        - name: api-key
          in: header
          required: false
          type: string
        - name: User-Agent
          in: header
          required: false
          type: string
        - name: Authorization
          in: header
          required: false
          type: string
        - name: api-version
          in: header
          required: false
          type: string
        - name: Consent-Format
          in: header
          required: false
          type: string
        - name: X-Forwarded-For
          in: header
          required: false
          type: string
        - name: Origin
          in: header
          required: false
          type: string
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '202':
          description: 202 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '400':
          description: 400 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '401':
          description: 401 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '403':
          description: 403 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '404':
          description: 404 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '500':
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
      security:
        - redwolf-proxy-gateway-authorizer-user: []
      x-amazon-apigateway-integration:
        httpMethod: ANY
        uri: https://prod.consent.cs.vizio.com/{proxy}
        responses:
          '200':
            statusCode: '200'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '202':
            statusCode: '202'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '400':
            statusCode: '400'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '401':
            statusCode: '401'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '403':
            statusCode: '403'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '404':
            statusCode: '404'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          5\d{2}:
            statusCode: '500'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
        requestParameters:
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.Accept: method.request.header.Accept
          integration.request.header.Accept-Language: method.request.header.Accept-Language
          integration.request.header.User-Agent: method.request.header.User-Agent
          integration.request.header.sdk-version: method.request.header.sdk-version
          integration.request.header.Content-Language: method.request.header.Content-Language
          integration.request.header.sentry-trace: method.request.header.sentry-trace
          integration.request.header.platform: method.request.header.platform
          integration.request.path.proxy: method.request.path.proxy
          integration.request.header.Authorization: method.request.header.Authorization
          integration.request.header.Consent-Format: method.request.header.Consent-Format
          integration.request.header.api-key: method.request.header.api-key
          integration.request.header.api-version: method.request.header.api-version
          integration.request.header.X-Forwarded-For: method.request.header.X-Forwarded-For
          integration.request.header.Content-Type: method.request.header.Content-Type
        requestTemplates:
          application/json: |
            ## Set request body for the downstream request
            $input.json("$")

            ## Set various authorization headers based on what is present in the authorizer context
            #if($context.authorizer.jwt != "")
                #set($context.requestOverride.header.Authorization = $context.authorizer.jwt)
            #end

            ## Set authorization keys for services behind user authorizer
            #if ($context.resourcePath.contains("/pay-data-analytics-pipeline") && $context.authorizer.analyticsPipelineApiKey != "")
                #set($context.requestOverride.header.x-api-key = $context.authorizer.analyticsPipelineApiKey)
            #end
            #if ($context.resourcePath.contains("/consent-management") && $context.authorizer.consentManagementSvcApiKey != "")
                #set($context.requestOverride.header.api-key = $context.authorizer.consentManagementSvcApiKey)
            #end

            ## Set authorization keys for services behind partner authorizer
            #if ($context.resourcePath.contains("/myvizio-api") && $context.authorizer.subscriptionServiceApiKey != "")
                #set($context.requestOverride.header.Ocp-Apim-Subscription-Key = $context.authorizer.subscriptionServiceApiKey)
            #end
            #if ($context.resourcePath.contains("/subscriptions-api") && $context.authorizer.subscriptionServiceApiKey != "")
                #set($context.requestOverride.header.Ocp-Apim-Subscription-Key = $context.authorizer.subscriptionServiceApiKey)
            #end
            #if ($context.resourcePath.contains("/partner-svc") && $context.authorizer.partnerServiceApiKey != "")
                #set($context.requestOverride.header.x-api-key = $context.authorizer.partnerServiceApiKey)
            #end
            #if ($context.resourcePath.contains("/coupons-api") && $context.authorizer.partnerCname != "" && $context.authorizer.subscriptionServiceApiKey != "")
                #set($context.requestOverride.querystring.appId = $context.authorizer.partnerCname)
                #set($context.requestOverride.header.Ocp-Apim-Subscription-Key = $context.authorizer.subscriptionServiceApiKey)
            #end

            ## Set Partner headers
            #if ($context.authorizer.partnerName != "")
                #set($context.requestOverride.header.partner-name = $context.authorizer.partnerName)
            #end
            #if ($context.authorizer.partnerCname != "")
                #set($context.requestOverride.header.partner-cname = $context.authorizer.partnerCname)
            #end
            #if ($context.authorizer.partnerId != "")
                #set($context.requestOverride.header.partner-id = $context.authorizer.partnerId)
            #end

            ## Loop through all incoming query parameters and set them for the downstream request
            #set($querystrings = $input.params().get("querystring"))
            #foreach($querystring in $querystrings.keySet())
                #set($context.requestOverride.querystring[$querystring]= $querystrings.get($querystring))
                #if($foreach.hasNext)#end
            #end
        passthroughBehavior: when_no_templates
        timeoutInMillis: 29000
        type: http
  /coupons-api/{proxy}:
    options:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: proxy
          in: path
          required: true
          type: string
      responses:
        '200':
          description: 200 response
          schema:
            $ref: '#/definitions/Empty'
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'''
              method.response.header.Access-Control-Allow-Headers: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestTemplates:
          application/json: '{ "statusCode": 200 }'
        passthroughBehavior: when_no_match
        timeoutInMillis: 29000
        contentHandling: CONVERT_TO_TEXT
        type: mock
    x-amazon-apigateway-any-method:
      consumes:
        - application/json
      parameters:
        - name: sentry-trace
          in: header
          required: false
          type: string
        - name: Accept
          in: header
          required: false
          type: string
        - name: platform
          in: header
          required: false
          type: string
        - name: sdk-version
          in: header
          required: false
          type: string
        - name: User-Agent
          in: header
          required: false
          type: string
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Content-Language
          in: header
          required: false
          type: string
        - name: Content-Type
          in: header
          required: false
          type: string
        - name: Accept-Language
          in: header
          required: false
          type: string
        - name: proxy
          in: path
          required: true
          type: string
        - name: X-Forwarded-For
          in: header
          required: false
          type: string
        - name: Origin
          in: header
          required: false
          type: string
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '202':
          description: 202 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '400':
          description: 400 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '401':
          description: 401 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '403':
          description: 403 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '404':
          description: 404 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '500':
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
      security:
        - redwolf-proxy-gateway-authorizer-partner: []
      x-amazon-apigateway-integration:
        httpMethod: ANY
        uri: https://apim-vizio-ecommerce-prod.vizio.com/coupons-api/v1/{proxy}
        responses:
          '200':
            statusCode: '200'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '202':
            statusCode: '202'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '400':
            statusCode: '400'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '401':
            statusCode: '401'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '403':
            statusCode: '403'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '404':
            statusCode: '404'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          5\d{2}:
            statusCode: '500'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
        requestParameters:
          integration.request.header.Content-Language: method.request.header.Content-Language
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.sentry-trace: method.request.header.sentry-trace
          integration.request.header.platform: method.request.header.platform
          integration.request.header.Accept: method.request.header.Accept
          integration.request.path.proxy: method.request.path.proxy
          integration.request.header.Accept-Language: method.request.header.Accept-Language
          integration.request.header.Authorization: method.request.header.Authorization
          integration.request.header.User-Agent: method.request.header.User-Agent
          integration.request.header.X-Forwarded-For: method.request.header.X-Forwarded-For
          integration.request.header.sdk-version: method.request.header.sdk-version
          integration.request.header.Content-Type: method.request.header.Content-Type
        requestTemplates:
          application/json: |
            ## Set request body for the downstream request
            $input.json("$")

            ## Set various authorization headers based on what is present in the authorizer context
            #if($context.authorizer.jwt != "")
                #set($context.requestOverride.header.Authorization = $context.authorizer.jwt)
            #end

            ## Set authorization keys for services behind user authorizer
            #if ($context.resourcePath.contains("/pay-data-analytics-pipeline") && $context.authorizer.analyticsPipelineApiKey != "")
                #set($context.requestOverride.header.x-api-key = $context.authorizer.analyticsPipelineApiKey)
            #end
            #if ($context.resourcePath.contains("/consent-management") && $context.authorizer.consentManagementSvcApiKey != "")
                #set($context.requestOverride.header.api-key = $context.authorizer.consentManagementSvcApiKey)
            #end

            ## Set authorization keys for services behind partner authorizer
            #if ($context.resourcePath.contains("/myvizio-api") && $context.authorizer.subscriptionServiceApiKey != "")
                #set($context.requestOverride.header.Ocp-Apim-Subscription-Key = $context.authorizer.subscriptionServiceApiKey)
            #end
            #if ($context.resourcePath.contains("/subscriptions-api") && $context.authorizer.subscriptionServiceApiKey != "")
                #set($context.requestOverride.header.Ocp-Apim-Subscription-Key = $context.authorizer.subscriptionServiceApiKey)
            #end
            #if ($context.resourcePath.contains("/partner-svc") && $context.authorizer.partnerServiceApiKey != "")
                #set($context.requestOverride.header.x-api-key = $context.authorizer.partnerServiceApiKey)
            #end
            #if ($context.resourcePath.contains("/coupons-api") && $context.authorizer.partnerCname != "" && $context.authorizer.subscriptionServiceApiKey != "")
                #set($context.requestOverride.querystring.appId = $context.authorizer.partnerCname)
                #set($context.requestOverride.header.Ocp-Apim-Subscription-Key = $context.authorizer.subscriptionServiceApiKey)
            #end

            ## Set Partner headers
            #if ($context.authorizer.partnerName != "")
                #set($context.requestOverride.header.partner-name = $context.authorizer.partnerName)
            #end
            #if ($context.authorizer.partnerCname != "")
                #set($context.requestOverride.header.partner-cname = $context.authorizer.partnerCname)
            #end
            #if ($context.authorizer.partnerId != "")
                #set($context.requestOverride.header.partner-id = $context.authorizer.partnerId)
            #end

            ## Loop through all incoming query parameters and set them for the downstream request
            #set($querystrings = $input.params().get("querystring"))
            #foreach($querystring in $querystrings.keySet())
                #set($context.requestOverride.querystring[$querystring]= $querystrings.get($querystring))
                #if($foreach.hasNext)#end
            #end
        passthroughBehavior: when_no_templates
        timeoutInMillis: 29000
        type: http
  /myvizio-api/{proxy}:
    options:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: proxy
          in: path
          required: true
          type: string
      responses:
        '200':
          description: 200 response
          schema:
            $ref: '#/definitions/Empty'
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'''
              method.response.header.Access-Control-Allow-Headers: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestTemplates:
          application/json: '{ "statusCode": 200 }'
        passthroughBehavior: when_no_match
        timeoutInMillis: 29000
        contentHandling: CONVERT_TO_TEXT
        type: mock
    x-amazon-apigateway-any-method:
      consumes:
        - application/json
      parameters:
        - name: sentry-trace
          in: header
          required: false
          type: string
        - name: Accept
          in: header
          required: false
          type: string
        - name: platform
          in: header
          required: false
          type: string
        - name: sdk-version
          in: header
          required: false
          type: string
        - name: User-Agent
          in: header
          required: false
          type: string
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Content-Language
          in: header
          required: false
          type: string
        - name: Content-Type
          in: header
          required: false
          type: string
        - name: Accept-Language
          in: header
          required: false
          type: string
        - name: proxy
          in: path
          required: true
          type: string
        - name: X-Forwarded-For
          in: header
          required: false
          type: string
        - name: Origin
          in: header
          required: false
          type: string
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '202':
          description: 202 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '400':
          description: 400 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '401':
          description: 401 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '403':
          description: 403 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '404':
          description: 404 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '500':
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
      security:
        - redwolf-proxy-gateway-authorizer-partner: []
      x-amazon-apigateway-integration:
        httpMethod: ANY
        uri: https://apim-vizio-ecommerce-prod.vizio.com/myvizio-api/{proxy}
        responses:
          '200':
            statusCode: '200'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '202':
            statusCode: '202'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '400':
            statusCode: '400'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '401':
            statusCode: '401'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '403':
            statusCode: '403'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '404':
            statusCode: '404'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          5\d{2}:
            statusCode: '500'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
        requestParameters:
          integration.request.header.Content-Language: method.request.header.Content-Language
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.sentry-trace: method.request.header.sentry-trace
          integration.request.header.platform: method.request.header.platform
          integration.request.header.Accept: method.request.header.Accept
          integration.request.path.proxy: method.request.path.proxy
          integration.request.header.Accept-Language: method.request.header.Accept-Language
          integration.request.header.Authorization: method.request.header.Authorization
          integration.request.header.User-Agent: method.request.header.User-Agent
          integration.request.header.X-Forwarded-For: method.request.header.X-Forwarded-For
          integration.request.header.sdk-version: method.request.header.sdk-version
          integration.request.header.Content-Type: method.request.header.Content-Type
        requestTemplates:
          application/json: |
            ## Set request body for the downstream request
            $input.json("$")

            ## Set various authorization headers based on what is present in the authorizer context
            #if($context.authorizer.jwt != "")
                #set($context.requestOverride.header.Authorization = $context.authorizer.jwt)
            #end

            ## Set authorization keys for services behind user authorizer
            #if ($context.resourcePath.contains("/pay-data-analytics-pipeline") && $context.authorizer.analyticsPipelineApiKey != "")
                #set($context.requestOverride.header.x-api-key = $context.authorizer.analyticsPipelineApiKey)
            #end
            #if ($context.resourcePath.contains("/consent-management") && $context.authorizer.consentManagementSvcApiKey != "")
                #set($context.requestOverride.header.api-key = $context.authorizer.consentManagementSvcApiKey)
            #end

            ## Set authorization keys for services behind partner authorizer
            #if ($context.resourcePath.contains("/myvizio-api") && $context.authorizer.subscriptionServiceApiKey != "")
                #set($context.requestOverride.header.Ocp-Apim-Subscription-Key = $context.authorizer.subscriptionServiceApiKey)
            #end
            #if ($context.resourcePath.contains("/subscriptions-api") && $context.authorizer.subscriptionServiceApiKey != "")
                #set($context.requestOverride.header.Ocp-Apim-Subscription-Key = $context.authorizer.subscriptionServiceApiKey)
            #end
            #if ($context.resourcePath.contains("/partner-svc") && $context.authorizer.partnerServiceApiKey != "")
                #set($context.requestOverride.header.x-api-key = $context.authorizer.partnerServiceApiKey)
            #end
            #if ($context.resourcePath.contains("/coupons-api") && $context.authorizer.partnerCname != "" && $context.authorizer.subscriptionServiceApiKey != "")
                #set($context.requestOverride.querystring.appId = $context.authorizer.partnerCname)
                #set($context.requestOverride.header.Ocp-Apim-Subscription-Key = $context.authorizer.subscriptionServiceApiKey)
            #end

            ## Set Partner headers
            #if ($context.authorizer.partnerName != "")
                #set($context.requestOverride.header.partner-name = $context.authorizer.partnerName)
            #end
            #if ($context.authorizer.partnerCname != "")
                #set($context.requestOverride.header.partner-cname = $context.authorizer.partnerCname)
            #end
            #if ($context.authorizer.partnerId != "")
                #set($context.requestOverride.header.partner-id = $context.authorizer.partnerId)
            #end

            ## Loop through all incoming query parameters and set them for the downstream request
            #set($querystrings = $input.params().get("querystring"))
            #foreach($querystring in $querystrings.keySet())
                #set($context.requestOverride.querystring[$querystring]= $querystrings.get($querystring))
                #if($foreach.hasNext)#end
            #end
        passthroughBehavior: when_no_templates
        timeoutInMillis: 29000
        type: http
  /partner-svc/{proxy}:
    options:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: proxy
          in: path
          required: true
          type: string
      responses:
        '200':
          description: 200 response
          schema:
            $ref: '#/definitions/Empty'
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'''
              method.response.header.Access-Control-Allow-Headers: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestTemplates:
          application/json: '{ "statusCode": 200 }'
        passthroughBehavior: when_no_match
        timeoutInMillis: 29000
        contentHandling: CONVERT_TO_TEXT
        type: mock
    x-amazon-apigateway-any-method:
      consumes:
        - application/json
      parameters:
        - name: sentry-trace
          in: header
          required: false
          type: string
        - name: Accept
          in: header
          required: false
          type: string
        - name: platform
          in: header
          required: false
          type: string
        - name: sdk-version
          in: header
          required: false
          type: string
        - name: User-Agent
          in: header
          required: false
          type: string
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Content-Language
          in: header
          required: false
          type: string
        - name: Content-Type
          in: header
          required: false
          type: string
        - name: Accept-Language
          in: header
          required: false
          type: string
        - name: proxy
          in: path
          required: true
          type: string
        - name: X-Forwarded-For
          in: header
          required: false
          type: string
        - name: Origin
          in: header
          required: false
          type: string
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '202':
          description: 202 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '400':
          description: 400 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '401':
          description: 401 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '403':
          description: 403 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '404':
          description: 404 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '500':
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
      security:
        - redwolf-proxy-gateway-authorizer-partner: []
      x-amazon-apigateway-integration:
        httpMethod: ANY
        uri: https://prod.partner-svc.redwolf.internal.plat.vizio.com/v1/{proxy}
        responses:
          '200':
            statusCode: '200'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '202':
            statusCode: '202'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '400':
            statusCode: '400'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '401':
            statusCode: '401'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '403':
            statusCode: '403'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '404':
            statusCode: '404'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          5\d{2}:
            statusCode: '500'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
        requestParameters:
          integration.request.header.Content-Language: method.request.header.Content-Language
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.sentry-trace: method.request.header.sentry-trace
          integration.request.header.platform: method.request.header.platform
          integration.request.header.Accept: method.request.header.Accept
          integration.request.path.proxy: method.request.path.proxy
          integration.request.header.Accept-Language: method.request.header.Accept-Language
          integration.request.header.Authorization: method.request.header.Authorization
          integration.request.header.User-Agent: method.request.header.User-Agent
          integration.request.header.X-Forwarded-For: method.request.header.X-Forwarded-For
          integration.request.header.sdk-version: method.request.header.sdk-version
          integration.request.header.Content-Type: method.request.header.Content-Type
        requestTemplates:
          application/json: |
            ## Set request body for the downstream request
            $input.json("$")

            ## Set various authorization headers based on what is present in the authorizer context
            #if($context.authorizer.jwt != "")
                #set($context.requestOverride.header.Authorization = $context.authorizer.jwt)
            #end

            ## Set authorization keys for services behind user authorizer
            #if ($context.resourcePath.contains("/pay-data-analytics-pipeline") && $context.authorizer.analyticsPipelineApiKey != "")
                #set($context.requestOverride.header.x-api-key = $context.authorizer.analyticsPipelineApiKey)
            #end
            #if ($context.resourcePath.contains("/consent-management") && $context.authorizer.consentManagementSvcApiKey != "")
                #set($context.requestOverride.header.api-key = $context.authorizer.consentManagementSvcApiKey)
            #end

            ## Set authorization keys for services behind partner authorizer
            #if ($context.resourcePath.contains("/myvizio-api") && $context.authorizer.subscriptionServiceApiKey != "")
                #set($context.requestOverride.header.Ocp-Apim-Subscription-Key = $context.authorizer.subscriptionServiceApiKey)
            #end
            #if ($context.resourcePath.contains("/subscriptions-api") && $context.authorizer.subscriptionServiceApiKey != "")
                #set($context.requestOverride.header.Ocp-Apim-Subscription-Key = $context.authorizer.subscriptionServiceApiKey)
            #end
            #if ($context.resourcePath.contains("/partner-svc") && $context.authorizer.partnerServiceApiKey != "")
                #set($context.requestOverride.header.x-api-key = $context.authorizer.partnerServiceApiKey)
            #end
            #if ($context.resourcePath.contains("/coupons-api") && $context.authorizer.partnerCname != "" && $context.authorizer.subscriptionServiceApiKey != "")
                #set($context.requestOverride.querystring.appId = $context.authorizer.partnerCname)
                #set($context.requestOverride.header.Ocp-Apim-Subscription-Key = $context.authorizer.subscriptionServiceApiKey)
            #end

            ## Set Partner headers
            #if ($context.authorizer.partnerName != "")
                #set($context.requestOverride.header.partner-name = $context.authorizer.partnerName)
            #end
            #if ($context.authorizer.partnerCname != "")
                #set($context.requestOverride.header.partner-cname = $context.authorizer.partnerCname)
            #end
            #if ($context.authorizer.partnerId != "")
                #set($context.requestOverride.header.partner-id = $context.authorizer.partnerId)
            #end

            ## Loop through all incoming query parameters and set them for the downstream request
            #set($querystrings = $input.params().get("querystring"))
            #foreach($querystring in $querystrings.keySet())
                #set($context.requestOverride.querystring[$querystring]= $querystrings.get($querystring))
                #if($foreach.hasNext)#end
            #end
        passthroughBehavior: when_no_templates
        timeoutInMillis: 29000
        type: http
  /pay-data-analytics-pipeline/{proxy}:
    options:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: proxy
          in: path
          required: true
          type: string
      responses:
        '200':
          description: 200 response
          schema:
            $ref: '#/definitions/Empty'
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'''
              method.response.header.Access-Control-Allow-Headers: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestTemplates:
          application/json: '{ "statusCode": 200 }'
        passthroughBehavior: when_no_match
        timeoutInMillis: 29000
        contentHandling: CONVERT_TO_TEXT
        type: mock
    x-amazon-apigateway-any-method:
      consumes:
        - application/json
      parameters:
        - name: sentry-trace
          in: header
          required: false
          type: string
        - name: Accept
          in: header
          required: false
          type: string
        - name: platform
          in: header
          required: false
          type: string
        - name: sdk-version
          in: header
          required: false
          type: string
        - name: User-Agent
          in: header
          required: false
          type: string
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Content-Language
          in: header
          required: false
          type: string
        - name: Content-Type
          in: header
          required: false
          type: string
        - name: Accept-Language
          in: header
          required: false
          type: string
        - name: proxy
          in: path
          required: true
          type: string
        - name: X-Forwarded-For
          in: header
          required: false
          type: string
        - name: Origin
          in: header
          required: false
          type: string
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '202':
          description: 202 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '400':
          description: 400 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '401':
          description: 401 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '403':
          description: 403 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '404':
          description: 404 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '500':
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
      security:
        - redwolf-proxy-gateway-authorizer-user: []
      x-amazon-apigateway-integration:
        httpMethod: ANY
        uri: https://prod.vizio-pay-data-analytics.redwolf.internal.plat.vizio.com/v1/{proxy}
        responses:
          '200':
            statusCode: '200'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '202':
            statusCode: '202'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '400':
            statusCode: '400'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '401':
            statusCode: '401'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '403':
            statusCode: '403'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '404':
            statusCode: '404'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          5\d{2}:
            statusCode: '500'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
        requestParameters:
          integration.request.header.Content-Language: method.request.header.Content-Language
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.sentry-trace: method.request.header.sentry-trace
          integration.request.header.platform: method.request.header.platform
          integration.request.header.Accept: method.request.header.Accept
          integration.request.path.proxy: method.request.path.proxy
          integration.request.header.Accept-Language: method.request.header.Accept-Language
          integration.request.header.Authorization: method.request.header.Authorization
          integration.request.header.User-Agent: method.request.header.User-Agent
          integration.request.header.X-Forwarded-For: method.request.header.X-Forwarded-For
          integration.request.header.sdk-version: method.request.header.sdk-version
          integration.request.header.Content-Type: method.request.header.Content-Type
        requestTemplates:
          application/json: |
            ## Set request body for the downstream request
            $input.json("$")

            ## Set various authorization headers based on what is present in the authorizer context
            #if($context.authorizer.jwt != "")
                #set($context.requestOverride.header.Authorization = $context.authorizer.jwt)
            #end

            ## Set authorization keys for services behind user authorizer
            #if ($context.resourcePath.contains("/pay-data-analytics-pipeline") && $context.authorizer.analyticsPipelineApiKey != "")
                #set($context.requestOverride.header.x-api-key = $context.authorizer.analyticsPipelineApiKey)
            #end
            #if ($context.resourcePath.contains("/consent-management") && $context.authorizer.consentManagementSvcApiKey != "")
                #set($context.requestOverride.header.api-key = $context.authorizer.consentManagementSvcApiKey)
            #end

            ## Set authorization keys for services behind partner authorizer
            #if ($context.resourcePath.contains("/myvizio-api") && $context.authorizer.subscriptionServiceApiKey != "")
                #set($context.requestOverride.header.Ocp-Apim-Subscription-Key = $context.authorizer.subscriptionServiceApiKey)
            #end
            #if ($context.resourcePath.contains("/subscriptions-api") && $context.authorizer.subscriptionServiceApiKey != "")
                #set($context.requestOverride.header.Ocp-Apim-Subscription-Key = $context.authorizer.subscriptionServiceApiKey)
            #end
            #if ($context.resourcePath.contains("/partner-svc") && $context.authorizer.partnerServiceApiKey != "")
                #set($context.requestOverride.header.x-api-key = $context.authorizer.partnerServiceApiKey)
            #end
            #if ($context.resourcePath.contains("/coupons-api") && $context.authorizer.partnerCname != "" && $context.authorizer.subscriptionServiceApiKey != "")
                #set($context.requestOverride.querystring.appId = $context.authorizer.partnerCname)
                #set($context.requestOverride.header.Ocp-Apim-Subscription-Key = $context.authorizer.subscriptionServiceApiKey)
            #end

            ## Set Partner headers
            #if ($context.authorizer.partnerName != "")
                #set($context.requestOverride.header.partner-name = $context.authorizer.partnerName)
            #end
            #if ($context.authorizer.partnerCname != "")
                #set($context.requestOverride.header.partner-cname = $context.authorizer.partnerCname)
            #end
            #if ($context.authorizer.partnerId != "")
                #set($context.requestOverride.header.partner-id = $context.authorizer.partnerId)
            #end

            ## Loop through all incoming query parameters and set them for the downstream request
            #set($querystrings = $input.params().get("querystring"))
            #foreach($querystring in $querystrings.keySet())
                #set($context.requestOverride.querystring[$querystring]= $querystrings.get($querystring))
                #if($foreach.hasNext)#end
            #end
        passthroughBehavior: when_no_templates
        timeoutInMillis: 29000
        type: http
  /pii/{proxy}:
    options:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: proxy
          in: path
          required: true
          type: string
      responses:
        '200':
          description: 200 response
          schema:
            $ref: '#/definitions/Empty'
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'''
              method.response.header.Access-Control-Allow-Headers: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestTemplates:
          application/json: '{ "statusCode": 200 }'
        passthroughBehavior: when_no_match
        timeoutInMillis: 29000
        contentHandling: CONVERT_TO_TEXT
        type: mock
    x-amazon-apigateway-any-method:
      consumes:
        - application/json
      parameters:
        - name: sentry-trace
          in: header
          required: false
          type: string
        - name: Accept
          in: header
          required: false
          type: string
        - name: platform
          in: header
          required: false
          type: string
        - name: sdk-version
          in: header
          required: false
          type: string
        - name: User-Agent
          in: header
          required: false
          type: string
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Content-Language
          in: header
          required: false
          type: string
        - name: Content-Type
          in: header
          required: false
          type: string
        - name: Accept-Language
          in: header
          required: false
          type: string
        - name: proxy
          in: path
          required: true
          type: string
        - name: X-Forwarded-For
          in: header
          required: false
          type: string
        - name: Origin
          in: header
          required: false
          type: string
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '202':
          description: 202 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '400':
          description: 400 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '401':
          description: 401 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '403':
          description: 403 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '404':
          description: 404 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '500':
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
      security:
        - redwolf-proxy-gateway-authorizer-user: []
      x-amazon-apigateway-integration:
        httpMethod: ANY
        uri: https://pii.internal.plat.vizio.com/master/{proxy}
        responses:
          '200':
            statusCode: '200'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '202':
            statusCode: '202'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '400':
            statusCode: '400'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '401':
            statusCode: '401'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '403':
            statusCode: '403'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '404':
            statusCode: '404'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          5\d{2}:
            statusCode: '500'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
        requestParameters:
          integration.request.header.Content-Language: method.request.header.Content-Language
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.sentry-trace: method.request.header.sentry-trace
          integration.request.header.platform: method.request.header.platform
          integration.request.header.Accept: method.request.header.Accept
          integration.request.path.proxy: method.request.path.proxy
          integration.request.header.Accept-Language: method.request.header.Accept-Language
          integration.request.header.Authorization: method.request.header.Authorization
          integration.request.header.User-Agent: method.request.header.User-Agent
          integration.request.header.X-Forwarded-For: method.request.header.X-Forwarded-For
          integration.request.header.sdk-version: method.request.header.sdk-version
          integration.request.header.Content-Type: method.request.header.Content-Type
        requestTemplates:
          application/json: |
            ## Set request body for the downstream request
            $input.json("$")

            ## Set various authorization headers based on what is present in the authorizer context
            #if($context.authorizer.jwt != "")
                #set($context.requestOverride.header.Authorization = $context.authorizer.jwt)
            #end

            ## Set authorization keys for services behind user authorizer
            #if ($context.resourcePath.contains("/pay-data-analytics-pipeline") && $context.authorizer.analyticsPipelineApiKey != "")
                #set($context.requestOverride.header.x-api-key = $context.authorizer.analyticsPipelineApiKey)
            #end
            #if ($context.resourcePath.contains("/consent-management") && $context.authorizer.consentManagementSvcApiKey != "")
                #set($context.requestOverride.header.api-key = $context.authorizer.consentManagementSvcApiKey)
            #end

            ## Set authorization keys for services behind partner authorizer
            #if ($context.resourcePath.contains("/myvizio-api") && $context.authorizer.subscriptionServiceApiKey != "")
                #set($context.requestOverride.header.Ocp-Apim-Subscription-Key = $context.authorizer.subscriptionServiceApiKey)
            #end
            #if ($context.resourcePath.contains("/subscriptions-api") && $context.authorizer.subscriptionServiceApiKey != "")
                #set($context.requestOverride.header.Ocp-Apim-Subscription-Key = $context.authorizer.subscriptionServiceApiKey)
            #end
            #if ($context.resourcePath.contains("/partner-svc") && $context.authorizer.partnerServiceApiKey != "")
                #set($context.requestOverride.header.x-api-key = $context.authorizer.partnerServiceApiKey)
            #end
            #if ($context.resourcePath.contains("/coupons-api") && $context.authorizer.partnerCname != "" && $context.authorizer.subscriptionServiceApiKey != "")
                #set($context.requestOverride.querystring.appId = $context.authorizer.partnerCname)
                #set($context.requestOverride.header.Ocp-Apim-Subscription-Key = $context.authorizer.subscriptionServiceApiKey)
            #end

            ## Set Partner headers
            #if ($context.authorizer.partnerName != "")
                #set($context.requestOverride.header.partner-name = $context.authorizer.partnerName)
            #end
            #if ($context.authorizer.partnerCname != "")
                #set($context.requestOverride.header.partner-cname = $context.authorizer.partnerCname)
            #end
            #if ($context.authorizer.partnerId != "")
                #set($context.requestOverride.header.partner-id = $context.authorizer.partnerId)
            #end

            ## Loop through all incoming query parameters and set them for the downstream request
            #set($querystrings = $input.params().get("querystring"))
            #foreach($querystring in $querystrings.keySet())
                #set($context.requestOverride.querystring[$querystring]= $querystrings.get($querystring))
                #if($foreach.hasNext)#end
            #end
        passthroughBehavior: when_no_templates
        timeoutInMillis: 29000
        type: http
  /pin-svc/{proxy}:
    options:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: proxy
          in: path
          required: true
          type: string
      responses:
        '200':
          description: 200 response
          schema:
            $ref: '#/definitions/Empty'
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'''
              method.response.header.Access-Control-Allow-Headers: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestTemplates:
          application/json: '{ "statusCode": 200 }'
        passthroughBehavior: when_no_match
        timeoutInMillis: 29000
        contentHandling: CONVERT_TO_TEXT
        type: mock
    x-amazon-apigateway-any-method:
      consumes:
        - application/json
      parameters:
        - name: sentry-trace
          in: header
          required: false
          type: string
        - name: Accept
          in: header
          required: false
          type: string
        - name: platform
          in: header
          required: false
          type: string
        - name: sdk-version
          in: header
          required: false
          type: string
        - name: User-Agent
          in: header
          required: false
          type: string
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Content-Language
          in: header
          required: false
          type: string
        - name: Content-Type
          in: header
          required: false
          type: string
        - name: Accept-Language
          in: header
          required: false
          type: string
        - name: proxy
          in: path
          required: true
          type: string
        - name: X-Forwarded-For
          in: header
          required: false
          type: string
        - name: Origin
          in: header
          required: false
          type: string
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '202':
          description: 202 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '400':
          description: 400 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '401':
          description: 401 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '403':
          description: 403 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '404':
          description: 404 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '500':
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
      security:
        - redwolf-proxy-gateway-authorizer-user: []
      x-amazon-apigateway-integration:
        httpMethod: ANY
        uri: https://prod.pin-svc.redwolf.internal.plat.vizio.com/v1/{proxy}
        responses:
          '200':
            statusCode: '200'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '202':
            statusCode: '202'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '400':
            statusCode: '400'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '401':
            statusCode: '401'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '403':
            statusCode: '403'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '404':
            statusCode: '404'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          5\d{2}:
            statusCode: '500'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
        requestParameters:
          integration.request.header.Content-Language: method.request.header.Content-Language
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.sentry-trace: method.request.header.sentry-trace
          integration.request.header.platform: method.request.header.platform
          integration.request.header.Accept: method.request.header.Accept
          integration.request.path.proxy: method.request.path.proxy
          integration.request.header.Accept-Language: method.request.header.Accept-Language
          integration.request.header.Authorization: method.request.header.Authorization
          integration.request.header.User-Agent: method.request.header.User-Agent
          integration.request.header.X-Forwarded-For: method.request.header.X-Forwarded-For
          integration.request.header.sdk-version: method.request.header.sdk-version
          integration.request.header.Content-Type: method.request.header.Content-Type
        requestTemplates:
          application/json: |
            ## Set request body for the downstream request
            $input.json("$")

            ## Set various authorization headers based on what is present in the authorizer context
            #if($context.authorizer.jwt != "")
                #set($context.requestOverride.header.Authorization = $context.authorizer.jwt)
            #end

            ## Set authorization keys for services behind user authorizer
            #if ($context.resourcePath.contains("/pay-data-analytics-pipeline") && $context.authorizer.analyticsPipelineApiKey != "")
                #set($context.requestOverride.header.x-api-key = $context.authorizer.analyticsPipelineApiKey)
            #end
            #if ($context.resourcePath.contains("/consent-management") && $context.authorizer.consentManagementSvcApiKey != "")
                #set($context.requestOverride.header.api-key = $context.authorizer.consentManagementSvcApiKey)
            #end

            ## Set authorization keys for services behind partner authorizer
            #if ($context.resourcePath.contains("/myvizio-api") && $context.authorizer.subscriptionServiceApiKey != "")
                #set($context.requestOverride.header.Ocp-Apim-Subscription-Key = $context.authorizer.subscriptionServiceApiKey)
            #end
            #if ($context.resourcePath.contains("/subscriptions-api") && $context.authorizer.subscriptionServiceApiKey != "")
                #set($context.requestOverride.header.Ocp-Apim-Subscription-Key = $context.authorizer.subscriptionServiceApiKey)
            #end
            #if ($context.resourcePath.contains("/partner-svc") && $context.authorizer.partnerServiceApiKey != "")
                #set($context.requestOverride.header.x-api-key = $context.authorizer.partnerServiceApiKey)
            #end
            #if ($context.resourcePath.contains("/coupons-api") && $context.authorizer.partnerCname != "" && $context.authorizer.subscriptionServiceApiKey != "")
                #set($context.requestOverride.querystring.appId = $context.authorizer.partnerCname)
                #set($context.requestOverride.header.Ocp-Apim-Subscription-Key = $context.authorizer.subscriptionServiceApiKey)
            #end

            ## Set Partner headers
            #if ($context.authorizer.partnerName != "")
                #set($context.requestOverride.header.partner-name = $context.authorizer.partnerName)
            #end
            #if ($context.authorizer.partnerCname != "")
                #set($context.requestOverride.header.partner-cname = $context.authorizer.partnerCname)
            #end
            #if ($context.authorizer.partnerId != "")
                #set($context.requestOverride.header.partner-id = $context.authorizer.partnerId)
            #end

            ## Loop through all incoming query parameters and set them for the downstream request
            #set($querystrings = $input.params().get("querystring"))
            #foreach($querystring in $querystrings.keySet())
                #set($context.requestOverride.querystring[$querystring]= $querystrings.get($querystring))
                #if($foreach.hasNext)#end
            #end
        passthroughBehavior: when_no_templates
        timeoutInMillis: 29000
        type: http
  /robots.txt:
    get:
      consumes:
        - application/json
      produces:
        - text/plain
      responses:
        '200':
          description: 200 response
          schema:
            $ref: '#/definitions/Empty'
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
            responseTemplates:
              text/plain: |
                User-agent: *
                Disallow: /
        requestTemplates:
          application/json: '{"statusCode":200}'
        passthroughBehavior: when_no_match
        timeoutInMillis: 29000
        type: mock
  /subscriptions-api/{proxy}:
    options:
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: proxy
          in: path
          required: true
          type: string
      responses:
        '200':
          description: 200 response
          schema:
            $ref: '#/definitions/Empty'
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Methods:
              type: string
            Access-Control-Allow-Headers:
              type: string
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'''
              method.response.header.Access-Control-Allow-Headers: '''*'''
              method.response.header.Access-Control-Allow-Origin: '''*'''
        requestTemplates:
          application/json: '{ "statusCode": 200 }'
        passthroughBehavior: when_no_match
        timeoutInMillis: 29000
        contentHandling: CONVERT_TO_TEXT
        type: mock
    x-amazon-apigateway-any-method:
      consumes:
        - application/json
      parameters:
        - name: sentry-trace
          in: header
          required: false
          type: string
        - name: Accept
          in: header
          required: false
          type: string
        - name: platform
          in: header
          required: false
          type: string
        - name: sdk-version
          in: header
          required: false
          type: string
        - name: User-Agent
          in: header
          required: false
          type: string
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Content-Language
          in: header
          required: false
          type: string
        - name: Content-Type
          in: header
          required: false
          type: string
        - name: Accept-Language
          in: header
          required: false
          type: string
        - name: proxy
          in: path
          required: true
          type: string
        - name: X-Forwarded-For
          in: header
          required: false
          type: string
        - name: Origin
          in: header
          required: false
          type: string
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '202':
          description: 202 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '400':
          description: 400 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '401':
          description: 401 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '403':
          description: 403 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '404':
          description: 404 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
        '500':
          description: 500 response
          headers:
            Access-Control-Allow-Origin:
              type: string
            Access-Control-Allow-Credentials:
              type: string
            Content-Disposition:
              type: string
            Connection:
              type: string
            Content-Language:
              type: string
            Access-Control-Allow-Headers:
              type: string
            Content-Type:
              type: string
      security:
        - redwolf-proxy-gateway-authorizer-partner: []
      x-amazon-apigateway-integration:
        httpMethod: ANY
        uri: https://apim-vizio-ecommerce-prod.vizio.com/subscriptions-api/{proxy}
        responses:
          '200':
            statusCode: '200'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '202':
            statusCode: '202'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '400':
            statusCode: '400'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '401':
            statusCode: '401'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '403':
            statusCode: '403'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          '404':
            statusCode: '404'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
          5\d{2}:
            statusCode: '500'
            responseParameters:
              method.response.header.Content-Disposition: integration.response.header.Content-Disposition
              method.response.header.Access-Control-Allow-Credentials: integration.response.header.Access-Control-Allow-Credentials
              method.response.header.Content-Type: integration.response.header.Content-Type
              method.response.header.Access-Control-Allow-Headers: integration.response.header.Access-Control-Allow-Headers
              method.response.header.Access-Control-Allow-Origin: integration.response.header.Access-Control-Allow-Origin
              method.response.header.Content-Language: integration.response.header.Content-Language
              method.response.header.Connection: integration.response.header.Connection
        requestParameters:
          integration.request.header.Content-Language: method.request.header.Content-Language
          integration.request.header.Origin: method.request.header.Origin
          integration.request.header.sentry-trace: method.request.header.sentry-trace
          integration.request.header.platform: method.request.header.platform
          integration.request.header.Accept: method.request.header.Accept
          integration.request.path.proxy: method.request.path.proxy
          integration.request.header.Accept-Language: method.request.header.Accept-Language
          integration.request.header.Authorization: method.request.header.Authorization
          integration.request.header.User-Agent: method.request.header.User-Agent
          integration.request.header.X-Forwarded-For: method.request.header.X-Forwarded-For
          integration.request.header.sdk-version: method.request.header.sdk-version
          integration.request.header.Content-Type: method.request.header.Content-Type
        requestTemplates:
          application/json: |
            ## Set request body for the downstream request
            $input.json("$")

            ## Set various authorization headers based on what is present in the authorizer context
            #if($context.authorizer.jwt != "")
                #set($context.requestOverride.header.Authorization = $context.authorizer.jwt)
            #end

            ## Set authorization keys for services behind user authorizer
            #if ($context.resourcePath.contains("/pay-data-analytics-pipeline") && $context.authorizer.analyticsPipelineApiKey != "")
                #set($context.requestOverride.header.x-api-key = $context.authorizer.analyticsPipelineApiKey)
            #end
            #if ($context.resourcePath.contains("/consent-management") && $context.authorizer.consentManagementSvcApiKey != "")
                #set($context.requestOverride.header.api-key = $context.authorizer.consentManagementSvcApiKey)
            #end

            ## Set authorization keys for services behind partner authorizer
            #if ($context.resourcePath.contains("/myvizio-api") && $context.authorizer.subscriptionServiceApiKey != "")
                #set($context.requestOverride.header.Ocp-Apim-Subscription-Key = $context.authorizer.subscriptionServiceApiKey)
            #end
            #if ($context.resourcePath.contains("/subscriptions-api") && $context.authorizer.subscriptionServiceApiKey != "")
                #set($context.requestOverride.header.Ocp-Apim-Subscription-Key = $context.authorizer.subscriptionServiceApiKey)
            #end
            #if ($context.resourcePath.contains("/partner-svc") && $context.authorizer.partnerServiceApiKey != "")
                #set($context.requestOverride.header.x-api-key = $context.authorizer.partnerServiceApiKey)
            #end
            #if ($context.resourcePath.contains("/coupons-api") && $context.authorizer.partnerCname != "" && $context.authorizer.subscriptionServiceApiKey != "")
                #set($context.requestOverride.querystring.appId = $context.authorizer.partnerCname)
                #set($context.requestOverride.header.Ocp-Apim-Subscription-Key = $context.authorizer.subscriptionServiceApiKey)
            #end

            ## Set Partner headers
            #if ($context.authorizer.partnerName != "")
                #set($context.requestOverride.header.partner-name = $context.authorizer.partnerName)
            #end
            #if ($context.authorizer.partnerCname != "")
                #set($context.requestOverride.header.partner-cname = $context.authorizer.partnerCname)
            #end
            #if ($context.authorizer.partnerId != "")
                #set($context.requestOverride.header.partner-id = $context.authorizer.partnerId)
            #end

            ## Loop through all incoming query parameters and set them for the downstream request
            #set($querystrings = $input.params().get("querystring"))
            #foreach($querystring in $querystrings.keySet())
                #set($context.requestOverride.querystring[$querystring]= $querystrings.get($querystring))
                #if($foreach.hasNext)#end
            #end
        passthroughBehavior: when_no_templates
        timeoutInMillis: 29000
        type: http
securityDefinitions:
  redwolf-proxy-gateway-authorizer-user:
    type: apiKey
    name: Authorization
    in: header
    x-amazon-apigateway-authtype: custom
    x-amazon-apigateway-authorizer:
      authorizerUri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:258062559651:function:redwolf-proxy-gateway-authorizer-user-ts:23/invocations
      authorizerResultTtlInSeconds: 300
      type: token
  redwolf-proxy-gateway-authorizer-partner:
    type: apiKey
    name: Unused
    in: header
    x-amazon-apigateway-authtype: custom
    x-amazon-apigateway-authorizer:
      authorizerUri: arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:258062559651:function:redwolf-proxy-gateway-authorizer-partner-ts:23/invocations
      authorizerResultTtlInSeconds: 300
      identitySource: method.request.header.Partner-Message, method.request.header.Partner-Signature, method.request.header.Partner-Key-Id
      type: request
definitions:
  Empty:
    type: object
    title: Empty Schema
x-amazon-apigateway-gateway-responses:
  WAF_FILTERED:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''*'''
  UNAUTHORIZED:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''*'''
  API_CONFIGURATION_ERROR:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''*'''
  RESOURCE_NOT_FOUND:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''*'''
  INVALID_SIGNATURE:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''*'''
  MISSING_AUTHENTICATION_TOKEN:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''*'''
  QUOTA_EXCEEDED:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''*'''
  ACCESS_DENIED:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''*'''
  BAD_REQUEST_PARAMETERS:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''*'''
  INVALID_API_KEY:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''*'''
  UNSUPPORTED_MEDIA_TYPE:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''*'''
  BAD_REQUEST_BODY:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''*'''
  DEFAULT_5XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''*'''
  INTEGRATION_TIMEOUT:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''*'''
  REQUEST_TOO_LARGE:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''*'''
  INTEGRATION_FAILURE:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''*'''
  AUTHORIZER_CONFIGURATION_ERROR:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''*'''
  AUTHORIZER_FAILURE:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''*'''
  THROTTLED:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''*'''
  DEFAULT_4XX:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''*'''
  EXPIRED_TOKEN:
    responseParameters:
      gatewayresponse.header.Access-Control-Allow-Origin: '''*'''
      gatewayresponse.header.Access-Control-Allow-Headers: '''*'''
